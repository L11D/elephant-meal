"""Automatic migration

Revision ID: 22149f85201c
Revises: 
Create Date: 2024-06-26 20:57:54.341988

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '22149f85201c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_table')
    op.create_unique_constraint(None, 'categories', ['id'])
    op.create_unique_constraint(None, 'crl', ['id'])
    op.create_unique_constraint(None, 'dish_products', ['id'])
    op.create_unique_constraint(None, 'dish_reviews', ['id'])
    op.create_unique_constraint(None, 'dishes', ['id'])
    op.create_unique_constraint(None, 'dishes_in_plan', ['id'])
    op.create_unique_constraint(None, 'ingredients', ['id'])
    op.create_unique_constraint(None, 'ingredients_in_recipes', ['id'])
    op.create_unique_constraint(None, 'plans', ['id'])
    op.create_unique_constraint(None, 'recipes', ['id'])
    op.create_unique_constraint(None, 'shops', ['id'])
    op.create_unique_constraint(None, 'store_assortment', ['id'])
    op.add_column('users', sa.Column('birth_date', sa.Date(), nullable=True))
    op.add_column('users', sa.Column('registration_date', sa.DateTime(), nullable=False))
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'registration_date')
    op.drop_column('users', 'birth_date')
    op.drop_constraint(None, 'store_assortment', type_='unique')
    op.drop_constraint(None, 'shops', type_='unique')
    op.drop_constraint(None, 'recipes', type_='unique')
    op.drop_constraint(None, 'plans', type_='unique')
    op.drop_constraint(None, 'ingredients_in_recipes', type_='unique')
    op.drop_constraint(None, 'ingredients', type_='unique')
    op.drop_constraint(None, 'dishes_in_plan', type_='unique')
    op.drop_constraint(None, 'dishes', type_='unique')
    op.drop_constraint(None, 'dish_reviews', type_='unique')
    op.drop_constraint(None, 'dish_products', type_='unique')
    op.drop_constraint(None, 'crl', type_='unique')
    op.drop_constraint(None, 'categories', type_='unique')
    op.create_table('test_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='test_table_pkey')
    )
    # ### end Alembic commands ###
